generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "prisma+postgres://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiMDFKV1pGUU4xQlhRMEcyN1c0Tkc1RkswRTQiLCJ0ZW5hbnRfaWQiOiI0YzQ4YmNmNDYxZjY3ZmY3NmI2ZTFjMzg2MjdhMjEwYTRlNmZiMGE1YjRhNmYyYTVhMmNmYjUzYWQ1MzA3NjJiIiwiaW50ZXJuYWxfc2VjcmV0IjoiYWY5ZjkxN2YtNjk1Ni00OGE4LTk5YWQtYjUxZTIyZDUzMmFiIn0.eSCOUZ2_3IeepTsOAF2jlgQ6CjSqt0PTTQts460BAm4"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float
  imageUrl    String?
  categoryId  Int?
  orderItems  OrderItem[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  category    Category? @relation(fields: [categoryId], references: [id])
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Order {
  id              Int      @id @default(autoincrement())
  total           Float
  shippingAddress String?
  billingAddress  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  phone          String?
  description     String?
  email           String
  image           String?
  name            String
  status          String   @default("PENDING")
  items         OrderItem[]
  stripeSessionId String?  @unique
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId Int?
  product   Product? @relation(fields: [productId], references: [id])
  name      String
  price     Float
  quantity  Int
  createdAt DateTime @default(now())
}

enum OrderStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}
